name: "Run In Development Proposals"

env:
  FOUNDRY_PROFILE: "ci"
  OP_RPC_URL: ${{secrets.OP_RPC_URL}}
  BASE_RPC_URL: ${{secrets.BASE_RPC_URL}}
  MOONBEAM_RPC_URL: ${{secrets.MOONBEAM_RPC_URL}}

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - "main"

jobs:
  run-in-development-proposal:
    permissions:
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: "recursive"

      - name: Setup Environment
        uses: ./.github/actions

      - name: Get Changed Files
        id: files
        uses: jitterbit/get-changed-files@v1
        with:
          format: "space-delimited"

      - name: Set PR_CHANGED_FILES
        run: |
          echo "PR_CHANGED_FILES=${{ steps.files.outputs.added_modified }}" >> $GITHUB_ENV

      - name: Set DEBUG flag
        run: echo "DEBUG=true" >> $GITHUB_ENV

      - name: Set PROPOSALS_FOLDER
        run: echo "PROPOSALS_FOLDER=src/proposals/mips" >> $GITHUB_ENV

      - name: List and Delete Previous Comments
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue_number = context.payload.pull_request.number;
            const comments = await github.rest.issues.listComments({
              ...context.repo,
              issue_number: issue_number
            });

            const actionComments = comments.data.filter(comment => 
                comment.user.login === 'github-actions[bot]' &&
                (
                comment.body.includes('=================== PROPOSAL START ==================') ||
                comment.body.includes('If you wish to simulate on-chain transactions pass a RPC URL')
               )
             );

            if (actionComments.length === 0) {
              return;
            }
            for (const comment of actionComments) {
              await github.rest.issues.deleteComment({
                ...context.repo,
                comment_id: comment.id,
              });
            }

      - name: Give write permissions
        run: chmod -R +x src/proposals/mips/

      - name: Run Calldata Printing
        uses: nick-fields/retry@v3
        with:
           polling_interval_seconds: 30
           retry_wait_seconds: 60
           timeout_minutes: 20
           max_attempts: 3
           command: bin/run-calldata-printing.sh

      - name: Comment PR with Calldata Printing Output
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            if (fs.existsSync('output.txt')) {
                const output = fs.readFileSync('output.txt', 'utf8');
                const prNumber = context.payload.pull_request.number;
                github.rest.issues.createComment({
                   ...context.repo,
                   issue_number: prNumber,
                   body: `\`\`\`\n${output}\n\`\`\``
                   });
             }
