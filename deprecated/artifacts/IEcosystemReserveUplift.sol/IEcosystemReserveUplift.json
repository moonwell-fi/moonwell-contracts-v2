{"abi":[{"type":"function","name":"approve","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"recipient","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getFundsAdmin","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"initialize","inputs":[{"name":"reserveController","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setFundsAdmin","inputs":[{"name":"admin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transfer","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"recipient","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"approve(address,address,uint256)":"e1f21c67","getFundsAdmin()":"06bc2ee0","initialize(address)":"c4d66de8","setFundsAdmin(address)":"ed0d2371","transfer(address,address,uint256)":"beabacc8"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFundsAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserveController\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"setFundsAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,address,uint256)\":{\"notice\":\"approve tokens from ecosystem reserve to recipient\"},\"getFundsAdmin()\":{\"notice\":\"get the funds admin\"},\"initialize(address)\":{\"notice\":\"Initialize function, sets ecosystem reserve, callable only once\"},\"setFundsAdmin(address)\":{\"notice\":\"set funds admin\"},\"transfer(address,address,uint256)\":{\"notice\":\"transfer tokens from ecosystem reserve to recipient\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"deprecated/stkWell/IEcosystemReserveUplift.sol\":\"IEcosystemReserveUplift\"},\"debug\":{\"revertStrings\":\"debug\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[\":@deprecated/=deprecated/\",\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@proposals/=proposals/\",\":@protocol/=src/\",\":@script/=script/\",\":@test/=test/\",\":@utils/=src/utils/\",\":@wormhole/=lib/wormhole/ethereum/contracts/\",\":@zelt-src/=lib/zelt/src/\",\":@zelt-test/=lib/zelt/test/\",\":@zelt/=lib/zelt/\",\":ds-test/=lib/solmate/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":solmate/=lib/solmate/src/\",\":wormhole/=lib/wormhole/\",\":zelt/=lib/zelt/src/\"]},\"sources\":{\"deprecated/stkWell/IEcosystemReserveUplift.sol\":{\"keccak256\":\"0x9b56426fff5e45ad90d4cc7346eef3e095809ca5d488271bf500ace643f295f3\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://5b8ee9ceabd21c28ec496153fe0e98c502aca7da60a925b6d6121db1e5100092\",\"dweb:/ipfs/QmNTVeukRatRmRuh4u4cKTiFEopjGcWwEyRMobKTXn2YxX\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"approve"},{"inputs":[],"stateMutability":"view","type":"function","name":"getFundsAdmin","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"reserveController","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"initialize"},{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setFundsAdmin"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transfer"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"approve(address,address,uint256)":{"notice":"approve tokens from ecosystem reserve to recipient"},"getFundsAdmin()":{"notice":"get the funds admin"},"initialize(address)":{"notice":"Initialize function, sets ecosystem reserve, callable only once"},"setFundsAdmin(address)":{"notice":"set funds admin"},"transfer(address,address,uint256)":{"notice":"transfer tokens from ecosystem reserve to recipient"}},"version":1}},"settings":{"remappings":["@deprecated/=deprecated/","@forge-std/=lib/forge-std/src/","@openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","@openzeppelin-contracts/=lib/openzeppelin-contracts/","@openzeppelin/=lib/openzeppelin-contracts/","@proposals/=proposals/","@protocol/=src/","@script/=script/","@test/=test/","@utils/=src/utils/","@wormhole/=lib/wormhole/ethereum/contracts/","@zelt-src/=lib/zelt/src/","@zelt-test/=lib/zelt/test/","@zelt/=lib/zelt/","ds-test/=lib/solmate/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/","solmate/=lib/solmate/src/","wormhole/=lib/wormhole/","zelt/=lib/zelt/src/"],"optimizer":{"enabled":true,"runs":1},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"deprecated/stkWell/IEcosystemReserveUplift.sol":"IEcosystemReserveUplift"},"evmVersion":"paris","libraries":{}},"sources":{"deprecated/stkWell/IEcosystemReserveUplift.sol":{"keccak256":"0x9b56426fff5e45ad90d4cc7346eef3e095809ca5d488271bf500ace643f295f3","urls":["bzz-raw://5b8ee9ceabd21c28ec496153fe0e98c502aca7da60a925b6d6121db1e5100092","dweb:/ipfs/QmNTVeukRatRmRuh4u4cKTiFEopjGcWwEyRMobKTXn2YxX"],"license":"agpl-3.0"}},"version":1},"id":0}