{"abi":[],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"deprecated/stkWell/moonbeam/OpenZeppelin/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"debug\":{\"revertStrings\":\"debug\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[\":@deprecated/=deprecated/\",\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@proposals/=proposals/\",\":@protocol/=src/\",\":@script/=script/\",\":@test/=test/\",\":@utils/=src/utils/\",\":@wormhole/=lib/wormhole/ethereum/contracts/\",\":@zelt-src/=lib/zelt/src/\",\":@zelt-test/=lib/zelt/test/\",\":@zelt/=lib/zelt/\",\":ds-test/=lib/solmate/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":solmate/=lib/solmate/src/\",\":wormhole/=lib/wormhole/\",\":zelt/=lib/zelt/src/\"]},\"sources\":{\"deprecated/stkWell/moonbeam/OpenZeppelin/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xa79553ac87dff4db5c73001d83e5bd77652f43e61b06e9370ca973225cb9054d\",\"urls\":[\"bzz-raw://cb5a4e8c1f38af26ea7ba232f0952cf6dcc12255ea7428c6e0fd85fde3b0605d\",\"dweb:/ipfs/QmUWQ5tAdcPhrh5ayqgnDbV5JZT9voEqJfutH1tL4AsLZs\"]},\"deprecated/stkWell/moonbeam/utils/Initializable.sol\":{\"keccak256\":\"0x9e4d3a973701002ed68f4cd0b694685e610ef39db06dd414e9f7a681058e4f53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://add01c21d27b506ccbbf1005d71c9a950fab6ccf67b613b41be5db1bd399c4ff\",\"dweb:/ipfs/QmatE4SW52YyNVGEY2ZoGtcYvoaNmjq3pFZthATedSY5ew\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@deprecated/=deprecated/","@forge-std/=lib/forge-std/src/","@openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","@openzeppelin-contracts/=lib/openzeppelin-contracts/","@openzeppelin/=lib/openzeppelin-contracts/","@proposals/=proposals/","@protocol/=src/","@script/=script/","@test/=test/","@utils/=src/utils/","@wormhole/=lib/wormhole/ethereum/contracts/","@zelt-src/=lib/zelt/src/","@zelt-test/=lib/zelt/test/","@zelt/=lib/zelt/","ds-test/=lib/solmate/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/","solmate/=lib/solmate/src/","wormhole/=lib/wormhole/","zelt/=lib/zelt/src/"],"optimizer":{"enabled":true,"runs":1},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"deprecated/stkWell/moonbeam/OpenZeppelin/ReentrancyGuardUpgradeable.sol":"ReentrancyGuardUpgradeable"},"evmVersion":"istanbul","libraries":{}},"sources":{"deprecated/stkWell/moonbeam/OpenZeppelin/ReentrancyGuardUpgradeable.sol":{"keccak256":"0xa79553ac87dff4db5c73001d83e5bd77652f43e61b06e9370ca973225cb9054d","urls":["bzz-raw://cb5a4e8c1f38af26ea7ba232f0952cf6dcc12255ea7428c6e0fd85fde3b0605d","dweb:/ipfs/QmUWQ5tAdcPhrh5ayqgnDbV5JZT9voEqJfutH1tL4AsLZs"],"license":null},"deprecated/stkWell/moonbeam/utils/Initializable.sol":{"keccak256":"0x9e4d3a973701002ed68f4cd0b694685e610ef39db06dd414e9f7a681058e4f53","urls":["bzz-raw://add01c21d27b506ccbbf1005d71c9a950fab6ccf67b613b41be5db1bd399c4ff","dweb:/ipfs/QmatE4SW52YyNVGEY2ZoGtcYvoaNmjq3pFZthATedSY5ew"],"license":"MIT"}},"version":1},"id":22}